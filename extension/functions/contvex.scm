(display "loading contvex.scm")(newline)



(add-var-name "hfvex" (py "list contmvex"))


(add-ids (list ( list "ContexVector" (make-arity (py "list (contmvex)") )))
    '("all fmvex(Contmvex fmvex -> ContexVector (fmvex:) )" "ContexVectorOneIntro")
    '("all hfvex (
        Succ Zero < Lh hfvex ->
        Contmvex (Head hfvex) ->
        ContexVector (Tail hfvex)  ->
        ContexVector hfvex)" "ContexVectorIntro")
     '("all hfvex (
        Zero  = Lh hfvex->
        ContexVector hfvex)" "ContexVectorNilIntro")
   )

(set-goal "all hfvex(ContexVector(hfvex) -> Zero<Lh hfvex -> Contmvex(Head hfvex))")
(assume "hfvex")
(elim)
(ng #t)
(auto)
(assume "hfvex0")
(assume "ZeroLh")
(simp "ZeroLh")
(ng #t)
(use "Efq")
(save "ContexVectorElim0")


(set-goal "all hfvex( ContexVector hfvex -> Succ Zero < Lh hfvex -> ContexVector (Tail hfvex) )")
(assume "hfvex")
(elim)
(ng #t)
(assume "fmvex" "Cvm")
(use "Efq")
(auto)
(assume "hfvex0")
(assume "Lhcond")
(simp "<-" "Lhcond")
(ng #t)
(use "Efq")
(save "ContexVectorElim1")

(set-goal "all fmvex,hfvex( ContexVector(fmvex::hfvex) -> ContexVector(hfvex))")
(assume "fmvex")
(cases)
(ng #t)
(assume "Cf")
(use "ContexVectorNilIntro")
(auto)
(assume "fmvex0")
(assume "hfvex0" "Cf")
(inst-with-to "ContexVectorElim1" (pt "fmvex::fmvex0::hfvex0") "ContfInst")
(ng "ContfInst")
(use "ContfInst")
(use "Cf")
(auto)
(save "ContexVectorElim3Elem")



(add-program-constant "ApplicationContexVMap" (py "list contmvex=>realVec=>realVec"))
(add-computation-rules "ApplicationContexVMap (Nil contmvex) xx" "RealVecConstr (Nil nat=>rat) (Nil pos=>nat)"
                        "ApplicationContexVMap (fmvex::hfvex) xx" "RealVectorConcat (fmvex xx) (ApplicationContexVMap hfvex xx)"
)

(set-totality-goal "ApplicationContexVMap")
(use "AllTotalElim")
(ind)
(use "AllTotalElim")
(assume "xx")
(ng #t)
(use "RealVecTotalVar")
(assume "fmvex" "hfvex")
(assume "Ih")
(use "AllTotalElim")
(assume "xx")
(simp "ApplicationContexVMap1CompRule")
(use "RealVectorConcatTotal")
(use "ReaTotalVar")
(use "Ih")
(use "RealVecTotalVar")
(save-totality)

(add-application (pt "ApplicationContexVMap"))

;;(remove-idpc-name "ContVectorArgCompatible")

(add-ids (list ( list "ContVectorArgCompatible" (make-arity (py "list contmvex") (py "realVec"))))
    '("all hfvex,xx(ContexVector hfvex -> RealVector xx -> all n ( n < Lh hfvex ->  xx dim = ((hfvex__n) dimexmv )) -> ContVectorArgCompatible hfvex xx)" "ContVectorArgCompatibleIntro")
   )

(set-goal "ContVectorArgCompatible hfvex xx -> ContexVector hfvex ")
(assume "hfvex" "xx")
(elim)
(auto)
(save "ContVectorArgCompatibleElim0")

(set-goal "ContVectorArgCompatible hfvex xx -> RealVector xx ")
(assume "hfvex" "xx")
(elim)
(auto)
(save "ContVectorArgCompatibleElim1")

(set-goal "ContVectorArgCompatible hfvex xx -> all n ( n < Lh hfvex ->  xx dim = ((hfvex__n) dimexmv )) ")
(assume "hfvex" "xx")
(elim)
(auto)
(save "ContVectorArgCompatibleElim2")

(set-goal "all fmvex,hfvex,xx(ContVectorArgCompatible(fmvex::hfvex)xx ->ContVectorArgCompatible(hfvex)xx)")
(assume "fmvex" "hfvex" "xx")
(assume "Cf")
(use "ContVectorArgCompatibleIntro")
(use "ContexVectorElim3Elem" (pt "fmvex"))
(use "ContVectorArgCompatibleElim0" (pt "xx"))
(use "Cf")
(use "ContVectorArgCompatibleElim1" (pt "fmvex::hfvex"))
(use "Cf")
(inst-with-to "ContVectorArgCompatibleElim2" (pt "(fmvex::hfvex)") (pt "xx") "CompatInst")
(assert "all n( n<(ListLength contmvex)(fmvex::hfvex) -> xx dim=((fmvex::hfvex)__n)dimexmv)")
(auto)
(assume "CompatInst2")
(assume "n")
(assume "lhcond")
(inst-with-to "CompatInst2" (pt "Succ n") "CompatInst3")
(ng "CompatInst3")
(use "CompatInst3")
(auto)
(save "ContVectorArgCompatibleElim3Elem")


(set-goal "ContVectorArgCompatible hfvex xx -> Zero < xx dim -> RealVector (hfvex xx)")
(ind)
(assume "xx")
(assume "Cf")
(assume "dimcond")
(ng #t)
(use "RealVectorIntro")
(ng #t)
(use "CauchyVectorNilIntro")
(auto)
(use "MonVectorNilIntro")
(auto)
(assume "fmvex" "hfvex")
(assume "Ih")
(assume "xx")
(assume "Cf")
(assume "dimcond")
(simp "ApplicationContexVMap1CompRule")
(simp "RealVectorConcat0CompRule")
(use "RealVectorIntro")
(use "CauchyVectorElim5Elem")
(use "RealConstrToCauchy")
(use "ContmvexApplicationReal")
(inst-with-to "ContexVectorElim0" (pt "fmvex::hfvex") "CV0")
(ng "CV0")
(use "CV0")
(use "ContVectorArgCompatibleElim0" (pt "xx"))
(auto)
(use "ContVectorArgCompatibleElim1" (pt "(fmvex::hfvex)"))
(auto)
(inst-with-to "ContVectorArgCompatibleElim2" (pt "(fmvex::hfvex)") (pt "xx") "CompatInst")
(assert "all n(n<(ListLength contmvex)(fmvex::hfvex) -> xx dim=((fmvex::hfvex)__n)dimexmv)")
(auto)
(assume "CompatInst2")
(inst-with-to "CompatInst2" (pt "Zero") "CompatInst3")
(use "CompatInst3")
(auto)
(use "RealVectorElim0")
(use "Ih")
(use "ContVectorArgCompatibleElim3Elem" (pt "fmvex"))
(auto)
(use "MonVectorElim5Elem")
(use "RealConstrToMon" (pt "([n]fmvex approxexmv(RatVecConstr(RealVecSeqs xx n))n)"))
(use "ContmvexApplicationReal")
(inst-with-to "ContexVectorElim0" (pt "fmvex::hfvex") "CV0")
(use "CV0")
(use "ContVectorArgCompatibleElim0" (pt "xx"))
(auto)
(use "ContVectorArgCompatibleElim1" (pt "(fmvex::hfvex)"))
(auto)
(inst-with-to "ContVectorArgCompatibleElim2" (pt "(fmvex::hfvex)") (pt "xx") "CompatInst")
(assert "all n(n<(ListLength contmvex)(fmvex::hfvex) -> xx dim=((fmvex::hfvex)__n)dimexmv)")
(auto)
(assume "CompatInst2")
(inst-with-to "CompatInst2" (pt "Zero") "CompatInst3")
(use "CompatInst3")
(auto)
(use "RealVectorElim1")
(use "Ih")
(use "ContVectorArgCompatibleElim3Elem" (pt "fmvex"))
(auto)
(save "ApplicationContexVMapReal")

;;(remove-idpc-name "ProperVmapR")

(add-var-name "FF" (py "realVec=>realVec"))


(add-ids
    (list (list "ProperVmapR" (make-arity (py "FF") (py "nat") (py "nat"))))
    '("all FF,n,m( all xx(n<=xx dim -> (FF xx)dim=m) -> all xx (RealVector xx -> n<=xx dim  -> RealVector (FF xx))-> ProperVmapR FF n m)"
      "ProperVmapRIntro"))

(set-goal "all FF,n,m(ProperVmapR FF n m->all xx(n<=xx dim -> (FF xx)dim=m))")
(assume "FF" "n" "m")
(elim)
(auto)
(save "ProperVmapRElim0")


(set-goal "all FF,n,m(ProperVmapR FF n m -> all xx (RealVector xx ->n<=xx dim-> RealVector (FF xx)))")
(assume "FF" "n" "m")
(elim)
(auto)
(save "ProperVmapRElim1")

